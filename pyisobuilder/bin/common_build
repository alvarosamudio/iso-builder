#! /usr/bin/env python2
# -*- coding: utf-8 -*-
#

import sys
sys.path.append("..")
from src import iso
import os
import time

os.chdir("..")
logfile=None

BASEDIR = "/home/isobuilder/pyisobuilder"

if len(sys.argv) != 2:
    raise OSError("arch amd64 or i386 ...")
else:
    arch = sys.argv[1]

name = os.path.basename(sys.argv[0]).replace('_build', '')

if not os.path.exists(os.path.join(BASEDIR,"conf", name)):
    raise OSError("No config path exists")

_data = os.path.join(BASEDIR, 'conf', name, 'data')
_config = os.path.join(BASEDIR, 'conf', name, 'config')
_debootstrap = os.path.join(BASEDIR, 'debootstrap')

N=iso.IsoBuilder('build', _data, _config, 'trusty', arch, _debootstrap, logfile, tmpfs_size='8g')
try:
    N.create_debootstrap()
    N.make_desktop()
    N.custom_desktop()
    if arch == 'amd64':
        N.prepare_cdrom_repository(include_packages=['grub-pc', 'grub-efi'])
    
    if arch == 'i386':
        N.prepare_cdrom_repository(include_packages=['grub-pc', 'grub-efi'])
        #N.prepare_cdrom_repository(include_packages=['grub-pc'])
    
    #N.prepare_overlay_squashfs()
    N.prepare_iso()
    output_path = os.path.join(BASEDIR,'output','atm',time.strftime("%Y%m%d",time.localtime()))
    if not os.path.exists(output_path):
        os.makedirs(output_path)
    iso_fullpath=os.path.join(output_path,'deepin-%s-%s.iso' % (name, arch))
    N.make_iso(imgname=iso_fullpath)
    N.make_dailylink(output_path)
finally:
    N.clean()
